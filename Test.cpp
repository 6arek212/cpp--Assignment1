
#include "doctest.h"
#include "mat.hpp"
using namespace ariel;

#include <string>
#include <algorithm>
using namespace std;

/**
 * Returns the input string without the whitespace characters: space, newline and tab.
 * Requires std=c++2a.
 */
string _nospaces(string input)
{
	std::erase(input, ' ');
	std::erase(input, '\t');
	std::erase(input, '\n');
	std::erase(input, '\r');
	return input;
}

TEST_CASE("Good input")
{
	CHECK(_nospaces(mat(9, 7, '@', '-')) == _nospaces("@@@@@@@@@\n"
													"@-------@\n"
													"@-@@@@@-@\n"
													"@-@---@-@\n"
													"@-@@@@@-@\n"
													"@-------@\n"
													"@@@@@@@@@"));

	CHECK(_nospaces(mat(3, 5, '@', '-')) == _nospaces("@@@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@@@"));

	CHECK(_nospaces(mat(3, 9, '@', '-')) == _nospaces("@@@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@-@\n"
													"@@@"));

	CHECK(_nospaces(mat(11, 13, '@', '@')) == _nospaces("@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@\n"
													  "@@@@@@@@@@@"));

	CHECK(_nospaces(mat(13, 21, '*', '@')) == _nospaces(
												 "*************\n"
												 "*@@@@@@@@@@@*"
												 "*@*********@*"
												 "*@*@@@@@@@*@*"
												 "*@*@*****@*@*"
												 "*@*@*@@@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@*@*@*@*"
												 "*@*@*@@@*@*@*"
												 "*@*@*****@*@*"
												 "*@*@@@@@@@*@*"
												 "*@*********@*"
												 "*@@@@@@@@@@@*"
												 "*************"

												 ));

	CHECK(_nospaces(mat(21, 21, '*', '@')) == _nospaces(
												 "*********************"
												 "*@@@@@@@@@@@@@@@@@@@*"
												 "*@*****************@*"
												 "*@*@@@@@@@@@@@@@@@*@*"
												 "*@*@*************@*@*"
												 "*@*@*@@@@@@@@@@@*@*@*"
												 "*@*@*@*********@*@*@*"
												 "*@*@*@*@@@@@@@*@*@*@*"
												 "*@*@*@*@*****@*@*@*@*"
												 "*@*@*@*@*@@@*@*@*@*@*"
												 "*@*@*@*@*@*@*@*@*@*@*"
												 "*@*@*@*@*@@@*@*@*@*@*"
												 "*@*@*@*@*****@*@*@*@*"
												 "*@*@*@*@@@@@@@*@*@*@*"
												 "*@*@*@*********@*@*@*"
												 "*@*@*@@@@@@@@@@@*@*@*"
												 "*@*@*************@*@*"
												 "*@*@@@@@@@@@@@@@@@*@*"
												 "*@*****************@*"
												 "*@@@@@@@@@@@@@@@@@@@*"
												 "*********************"));

	CHECK(_nospaces(mat(21, 21, '@', '*')) == _nospaces(
												 "@@@@@@@@@@@@@@@@@@@@@"
												 "@*******************@"
												 "@*@@@@@@@@@@@@@@@@@*@"
												 "@*@***************@*@"
												 "@*@*@@@@@@@@@@@@@*@*@"
												 "@*@*@***********@*@*@"
												 "@*@*@*@@@@@@@@@*@*@*@"
												 "@*@*@*@*******@*@*@*@"
												 "@*@*@*@*@@@@@*@*@*@*@"
												 "@*@*@*@*@***@*@*@*@*@"
												 "@*@*@*@*@*@*@*@*@*@*@"
												 "@*@*@*@*@***@*@*@*@*@"
												 "@*@*@*@*@@@@@*@*@*@*@"
												 "@*@*@*@*******@*@*@*@"
												 "@*@*@*@@@@@@@@@*@*@*@"
												 "@*@*@***********@*@*@"
												 "@*@*@@@@@@@@@@@@@*@*@"
												 "@*@***************@*@"
												 "@*@@@@@@@@@@@@@@@@@*@"
												 "@*******************@"
												 "@@@@@@@@@@@@@@@@@@@@@"));

	CHECK(_nospaces(mat(1, 11, '@', '*')) == _nospaces(
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"
												"@"));

	CHECK(_nospaces(mat(11, 1, '@', '*')) == _nospaces(
												"@@@@@@@@@@@"));

	CHECK(_nospaces(mat(11, 15, '$', '|')) == _nospaces(
												 "$$$$$$$$$$$"
												 "$|||||||||$"
												 "$|$$$$$$$|$"
												 "$|$|||||$|$"
												 "$|$|$$$|$|$"
												 "$|$|$|$|$|$"
												 "$|$|$|$|$|$"
												 "$|$|$|$|$|$"
												 "$|$|$|$|$|$"
												 "$|$|$|$|$|$"
												 "$|$|$$$|$|$"
												 "$|$|||||$|$"
												 "$|$$$$$$$|$"
												 "$|||||||||$"
												 "$$$$$$$$$$$"));


	CHECK(_nospaces(mat(15, 3, '`', '$')) == _nospaces(
												"```````````````"
												"`$$$$$$$$$$$$$`"
												"```````````````"));

	CHECK(_nospaces(mat(15, 5, '^', '#')) == _nospaces(
												"^^^^^^^^^^^^^^^"
												"^#############^"
												"^#^^^^^^^^^^^#^"
												"^#############^"
												"^^^^^^^^^^^^^^^"));
												
}

TEST_CASE("Bad input")
{
	CHECK_THROWS(mat(10, 5, '$', '%'));

	CHECK_THROWS(mat(10, 8, '$', '%'));

	CHECK_THROWS(mat(5, 8, '@', '%'));

	CHECK_THROWS(mat(5, 10, '@', '@'));

	CHECK_THROWS(mat(4, 5, '@', '@'));

	CHECK_THROWS(mat(2, 2, '@', '-'));

	CHECK_THROWS(mat(15, 15, '$', ' '));

	CHECK_THROWS(mat(15, 15, ' ', '$'));
}
